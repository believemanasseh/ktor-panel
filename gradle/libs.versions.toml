[versions]
commons-math3 = "3.6.1"
junit-jupiter-engine = "5.10.0"
kotlin = "2.1.0"
exposed = "0.61.0"
ktor-server = "3.0.2"
junit-platform-launcher = "1.11.3"
kotlin-test-junit5 = "2.1.0"
logback-classic = "1.5.15"
h2 = "2.2.224"
jacoco = "0.8.12"
jbcrypt = "0.4"
hibernate = "7.0.3.Final"
jakarta-persistence = "3.2.0"
kotlin-reflect = "2.2.0"
mongodb-driver-bom = "5.5.1"
kotlinx-serialization-core = "1.6.0"

[libraries]
commons-math3 = { module = "org.apache.commons:commons-math3", version.ref = "commons-math3" }
junit-jupiter-engine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junit-jupiter-engine" }
kotlin-test-junit5 = { module = "org.jetbrains.kotlin:kotlin-test-junit5", version.ref = "kotlin-test-junit5" }
junit-platform-launcher = { module = "org.junit.platform:junit-platform-launcher", version.ref = "junit-platform-launcher" }
exposed-core = { module = "org.jetbrains.exposed:exposed-core", version.ref = "exposed" }
exposed-dao = { module = "org.jetbrains.exposed:exposed-dao", version.ref = "exposed" }
exposed-jdbc = { module = "org.jetbrains.exposed:exposed-jdbc", version.ref = "exposed" }
exposed-java-time = { module = "org.jetbrains.exposed:exposed-java-time", version.ref = "exposed" }
exposed-json = { module = "org.jetbrains.exposed:exposed-json", version.ref = "exposed" }
ktor-server-core = { module = "io.ktor:ktor-server-core", version.ref = "ktor-server" }
ktor-server-mustache = { module = "io.ktor:ktor-server-mustache", version.ref = "ktor-server" }
ktor-server-test-host = { module = "io.ktor:ktor-server-test-host", version.ref = "ktor-server" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor-server" }
ktor-server-content-negotiation = { module = "io.ktor:ktor-server-content-negotiation", version.ref = "ktor-server" }
ktor-server-netty = { module = "io.ktor:ktor-server-netty", version.ref = "ktor-server" }
ktor-server-config-yaml = { module = "io.ktor:ktor-server-config-yaml", version.ref = "ktor-server" }
logback-classic = { module = "ch.qos.logback:logback-classic", version.ref = "logback-classic" }
jbcrypt = { module = "org.mindrot:jbcrypt", version.ref = "jbcrypt" }
h2 = { module = "com.h2database:h2", version.ref = "h2" }
hibernate-core = { module = "org.hibernate.orm:hibernate-core", version.ref = "hibernate" }
jakarta-persistence-api = { module = "jakarta.persistence:jakarta.persistence-api", version.ref = "jakarta-persistence" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin-reflect" }
mongodb-driver-bom = { module = "org.mongodb:mongodb-driver-bom", version.ref = "mongodb-driver-bom" }
mongodb-driver-kotlin-coroutine = { module = "org.mongodb:mongodb-driver-kotlin-coroutine" }
kotlinx-serialization-core = { module = "org.jetbrains.kotlinx:kotlinx-serialization-core", version.ref = "kotlinx-serialization-core" }
bson-kotlinx = { module = "org.mongodb:bson-kotlinx" }

[plugins]
jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
ktor = { id = "io.ktor.plugin", version.ref = "ktor-server" }
kotlin-plugin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
jpa = { id = "org.jetbrains.kotlin.plugin.jpa", version.ref = "kotlin" }
allopen = { id = "org.jetbrains.kotlin.plugin.allopen", version.ref = "kotlin" }